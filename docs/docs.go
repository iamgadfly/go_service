// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/good/create": {
            "post": {
                "description": "Create good",
                "tags": [
                    "goods"
                ],
                "summary": "Create Good",
                "parameters": [
                    {
                        "description": "data for create",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateGoodReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Good"
                        }
                    }
                }
            }
        },
        "/api/v1/good/list/{limit}/{offset}": {
            "get": {
                "description": "List good",
                "tags": [
                    "goods"
                ],
                "summary": "List Good",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GoodList"
                        }
                    }
                }
            }
        },
        "/api/v1/good/remove/{id}/{project_id}": {
            "delete": {
                "description": "Reprioritiize good",
                "tags": [
                    "goods"
                ],
                "summary": "Reprioritiize Good",
                "parameters": [
                    {
                        "description": "data for reprioritiize",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PriorityReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PriorityResp"
                        }
                    }
                }
            }
        },
        "/api/v1/good/update": {
            "patch": {
                "description": "Create good",
                "tags": [
                    "goods"
                ],
                "summary": "Update Good",
                "parameters": [
                    {
                        "description": "data for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateGoodReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Good"
                        }
                    }
                }
            }
        },
        "/api/v1/project/create": {
            "post": {
                "description": "Create project",
                "tags": [
                    "projects"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "data for create",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateGoodReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateProjectReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Good": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "priority": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "integer"
                },
                "removed": {
                    "type": "boolean"
                },
                "removed_count": {
                    "type": "integer"
                }
            }
        },
        "models.GoodList": {
            "type": "object",
            "properties": {
                "goods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Good"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "removed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PriorityReq": {
            "type": "object",
            "required": [
                "newPriority"
            ],
            "properties": {
                "newPriority": {
                    "type": "integer"
                }
            }
        },
        "models.PriorityResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                }
            }
        },
        "models.RemoveResp": {
            "type": "object",
            "properties": {
                "campaginId": {
                    "description": "видимо id проекта",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "removed": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateGoodReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "App GRPC and REST",
	Description:      "app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
